syntax = "proto3";
package serverpb;

message NodeMeta {
  string id = 1;
  string public_key = 2;
  repeated string addrs = 3;
  string cert = 4;
  int64 updated = 5;
  string signature = 6;
}

message NodeConfig {
  string path = 1;
  int32 max_peers = 2;
}

message HelloRequest {
  NodeMeta meta = 1;
}

message HelloResponse {
  NodeMeta meta = 1;
  repeated NodeMeta connected_peers = 2;
  repeated NodeMeta known_peers = 3;
}

message HeartBeatRequest {}
message HeartBeatResponse {}

message MetaRequest {}

service Node {
  rpc Hello(HelloRequest) returns (HelloResponse) {}
  rpc HeartBeat(HeartBeatRequest) returns (HeartBeatResponse) {}
  rpc Meta(MetaRequest) returns (NodeMeta) {}
}

message File {
  string name = 1;
  bytes data = 2;
}

message Reference {
  string value = 1;
  string public_key = 2;
  string signature = 3;
  int64 timestamp = 4;
}

message GetRequest {
  string file_id = 1; // hash of file
}

message GetResponse {
  File file = 1;
}

message AddRequest {
  File file = 1;
}

message AddResponse {
  string file_id = 1;
}

message GetPeersRequest {}

message GetPeersResponse {
  repeated NodeMeta peers = 1;
}

message AddPeerRequest {
  string addr = 1;
}

message AddPeerResponse {}

message GetReferenceRequest {
  string reference_id = 1;
}

message GetReferenceResponse {
  Reference reference = 1;
}

message AddReferenceRequest {
  bytes priv_key = 1;
  string record = 2;
}

message AddReferenceResponse {
  string reference_id = 1;
}

service Client {
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Add(AddRequest) returns (AddResponse) {}
  rpc GetPeers(GetPeersRequest) returns (GetPeersResponse) {}
  rpc AddPeer(AddPeerRequest) returns (AddPeerResponse) {}
  rpc GetReference(GetReferenceRequest) returns (GetReferenceResponse) {}
  rpc AddReference(AddReferenceRequest) returns (AddReferenceResponse) {}
}
  // ipfs get <hash>
  // ipfs add <file>
  // ipfs peers
